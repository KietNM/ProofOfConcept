<?xml version="1.0" encoding="utf-8"?>
<edmx:Edmx Version="3.0" xmlns:edmx="http://schemas.microsoft.com/ado/2009/11/edmx">
  <!-- EF Runtime content -->
  <edmx:Runtime>
    <!-- SSDL content -->
    <edmx:StorageModels>
    <Schema Namespace="AdventureWorks2012Model.Store" Provider="System.Data.SqlClient" ProviderManifestToken="2012" Alias="Self" xmlns:store="http://schemas.microsoft.com/ado/2007/12/edm/EntityStoreSchemaGenerator" xmlns:customannotation="http://schemas.microsoft.com/ado/2013/11/edm/customannotation" xmlns="http://schemas.microsoft.com/ado/2009/11/edm/ssdl">
        <!--Errors Found During Generation:
warning 6002: The table/view 'AdventureWorks2012.Poc.AccountBalance' does not have a primary key defined. The key has been inferred and the definition was created as a read-only table/view.-->
        <EntityType Name="AccountBalance">
          <Key>
            <PropertyRef Name="AccountNumber" />
            <PropertyRef Name="Balance" />
            <PropertyRef Name="CurrencyCode" />
            <PropertyRef Name="ModifiedDate" />
          </Key>
          <Property Name="AccountNumber" Type="bigint" Nullable="false" />
          <Property Name="Balance" Type="decimal" Precision="18" Scale="3" Nullable="false" />
          <Property Name="CurrencyCode" Type="varchar" MaxLength="3" Nullable="false" />
          <Property Name="ModifiedDate" Type="datetime" Nullable="false" />
        </EntityType>
        <!--Errors Found During Generation:
warning 6002: The table/view 'AdventureWorks2012.Poc.BankAccount' does not have a primary key defined. The key has been inferred and the definition was created as a read-only table/view.-->
        <EntityType Name="BankAccount">
          <Key>
            <PropertyRef Name="AccountNumber" />
          </Key>
          <Property Name="AccountNumber" Type="bigint" Nullable="false" />
          <Property Name="AccountName" Type="nvarchar" MaxLength="50" />
        </EntityType>
        <!--Errors Found During Generation:
warning 6002: The table/view 'AdventureWorks2012.Poc.Currency' does not have a primary key defined. The key has been inferred and the definition was created as a read-only table/view.-->
        <EntityType Name="Currency">
          <Key>
            <PropertyRef Name="CurrencyCode" />
            <PropertyRef Name="CurrencyName" />
          </Key>
          <Property Name="CurrencyCode" Type="varchar" MaxLength="3" Nullable="false" />
          <Property Name="CurrencyName" Type="nvarchar" MaxLength="64" Nullable="false" />
        </EntityType>
        <!--Errors Found During Generation:
warning 6002: The table/view 'AdventureWorks2012.Poc.Transaction' does not have a primary key defined. The key has been inferred and the definition was created as a read-only table/view.-->
        <EntityType Name="Transaction">
          <Key>
            <PropertyRef Name="AccountNumber" />
            <PropertyRef Name="Amount" />
            <PropertyRef Name="CurrencyCode" />
            <PropertyRef Name="Type" />
            <PropertyRef Name="TransactionDate" />
          </Key>
          <Property Name="AccountNumber" Type="bigint" Nullable="false" />
          <Property Name="Amount" Type="decimal" Precision="18" Scale="3" Nullable="false" />
          <Property Name="CurrencyCode" Type="varchar" MaxLength="3" Nullable="false" />
          <Property Name="Type" Type="char" MaxLength="1" Nullable="false" />
          <Property Name="TransactionDate" Type="datetime" Nullable="false" />
        </EntityType>
        <Function Name="GetAccountBalance" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="Poc">
          <Parameter Name="accountNumber" Type="bigint" Mode="In" />
        </Function>
        <Function Name="InsertDeposit" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="Poc">
          <Parameter Name="accountNumber" Type="bigint" Mode="In" />
          <Parameter Name="amount" Type="decimal" Mode="In" />
          <Parameter Name="currencyCode" Type="varchar" Mode="In" />
        </Function>
        <Function Name="InsertWithdraw" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="Poc">
          <Parameter Name="accountNumber" Type="bigint" Mode="In" />
          <Parameter Name="amount" Type="decimal" Mode="In" />
          <Parameter Name="currencyCode" Type="varchar" Mode="In" />
          <Parameter Name="Result" Type="int" Mode="InOut" />
        </Function>
        <EntityContainer Name="AdventureWorks2012ModelStoreContainer">
          <EntitySet Name="AccountBalance" EntityType="Self.AccountBalance" store:Type="Tables" store:Schema="Poc">
            <DefiningQuery>SELECT 
    [AccountBalance].[AccountNumber] AS [AccountNumber], 
    [AccountBalance].[Balance] AS [Balance], 
    [AccountBalance].[CurrencyCode] AS [CurrencyCode], 
    [AccountBalance].[ModifiedDate] AS [ModifiedDate]
    FROM [Poc].[AccountBalance] AS [AccountBalance]</DefiningQuery>
          </EntitySet>
          <EntitySet Name="BankAccount" EntityType="Self.BankAccount" store:Type="Tables" store:Schema="Poc">
            <DefiningQuery>SELECT 
    [BankAccount].[AccountNumber] AS [AccountNumber], 
    [BankAccount].[AccountName] AS [AccountName]
    FROM [Poc].[BankAccount] AS [BankAccount]</DefiningQuery>
          </EntitySet>
          <EntitySet Name="Currency" EntityType="Self.Currency" store:Type="Tables" store:Schema="Poc">
            <DefiningQuery>SELECT 
    [Currency].[CurrencyCode] AS [CurrencyCode], 
    [Currency].[CurrencyName] AS [CurrencyName]
    FROM [Poc].[Currency] AS [Currency]</DefiningQuery>
          </EntitySet>
          <EntitySet Name="Transaction" EntityType="Self.Transaction" store:Type="Tables" store:Schema="Poc">
            <DefiningQuery>SELECT 
    [Transaction].[AccountNumber] AS [AccountNumber], 
    [Transaction].[Amount] AS [Amount], 
    [Transaction].[CurrencyCode] AS [CurrencyCode], 
    [Transaction].[Type] AS [Type], 
    [Transaction].[TransactionDate] AS [TransactionDate]
    FROM [Poc].[Transaction] AS [Transaction]</DefiningQuery>
          </EntitySet>
        </EntityContainer>
      </Schema></edmx:StorageModels>
    <!-- CSDL content -->
    <edmx:ConceptualModels>
      <Schema Namespace="AdventureWorks2012Model" Alias="Self" annotation:UseStrongSpatialTypes="false" xmlns:annotation="http://schemas.microsoft.com/ado/2009/02/edm/annotation" xmlns:customannotation="http://schemas.microsoft.com/ado/2013/11/edm/customannotation" xmlns="http://schemas.microsoft.com/ado/2009/11/edm">
        <EntityContainer Name="AdventureWorks2012Entities" annotation:LazyLoadingEnabled="true">
          <FunctionImport Name="GetBalance" ReturnType="Collection(AdventureWorks2012Model.GetBalance_Result)">
          <Parameter Name="accountNumber" Mode="In" Type="Int64" />
          </FunctionImport>
          <FunctionImport Name="GetAccountBalance" ReturnType="Collection(AdventureWorks2012Model.GetAccountBalance_Result)">
          <Parameter Name="accountNumber" Mode="In" Type="Int64" />
          </FunctionImport>
          <EntitySet Name="AccountBalances" EntityType="AdventureWorks2012Model.AccountBalance" />
          <EntitySet Name="BankAccounts" EntityType="AdventureWorks2012Model.BankAccount" />
          <EntitySet Name="Currencies" EntityType="AdventureWorks2012Model.Currency" />
          <EntitySet Name="Transactions" EntityType="AdventureWorks2012Model.Transaction" />
          <FunctionImport Name="InsertDeposit" ReturnType="Collection(AdventureWorks2012Model.InsertDeposit_Result)">
            <Parameter Name="accountNumber" Mode="In" Type="Int64" />
            <Parameter Name="amount" Mode="In" Type="Decimal" />
            <Parameter Name="currencyCode" Mode="In" Type="String" />
          </FunctionImport>
          <FunctionImport Name="InsertWithdraw" ReturnType="Collection(AdventureWorks2012Model.InsertWithdraw_Result)">
            <Parameter Name="accountNumber" Mode="In" Type="Int64" />
            <Parameter Name="amount" Mode="In" Type="Decimal" />
            <Parameter Name="currencyCode" Mode="In" Type="String" />
            <Parameter Name="Result" Mode="InOut" Type="Int32" />
          </FunctionImport>
        </EntityContainer>
        <ComplexType Name="GetBalance_Result">
          <Property Type="Int64" Name="AccountNumber" Nullable="false" />
          <Property Type="Decimal" Name="Balance" Nullable="false" Precision="18" Scale="3" />
          <Property Type="String" Name="Currency" Nullable="false" MaxLength="3" />
        </ComplexType>
        <ComplexType Name="GetAccountBalance_Result">
          <Property Type="Int64" Name="AccountNumber" Nullable="false" />
          <Property Type="Decimal" Name="Balance" Nullable="false" Precision="18" Scale="3" />
          <Property Type="String" Name="CurrencyCode" Nullable="false" MaxLength="3" />
          <Property Type="DateTime" Name="ModifiedDate" Nullable="false" Precision="23" />
        </ComplexType>
        <EntityType Name="AccountBalance">
          <Key>
            <PropertyRef Name="AccountNumber" />
            <PropertyRef Name="Balance" />
            <PropertyRef Name="CurrencyCode" />
            <PropertyRef Name="ModifiedDate" />
          </Key>
          <Property Name="AccountNumber" Type="Int64" Nullable="false" />
          <Property Name="Balance" Type="Decimal" Nullable="false" Precision="18" Scale="3" />
          <Property Name="CurrencyCode" Type="String" Nullable="false" MaxLength="3" FixedLength="false" Unicode="false" />
          <Property Name="ModifiedDate" Type="DateTime" Nullable="false" Precision="3" />
        </EntityType>
        <EntityType Name="BankAccount">
          <Key>
            <PropertyRef Name="AccountNumber" />
          </Key>
          <Property Name="AccountNumber" Type="Int64" Nullable="false" />
          <Property Name="AccountName" Type="String" MaxLength="50" FixedLength="false" Unicode="true" />
        </EntityType>
        <EntityType Name="Currency">
          <Key>
            <PropertyRef Name="CurrencyCode" />
            <PropertyRef Name="CurrencyName" />
          </Key>
          <Property Name="CurrencyCode" Type="String" Nullable="false" MaxLength="3" FixedLength="false" Unicode="false" />
          <Property Name="CurrencyName" Type="String" Nullable="false" MaxLength="64" FixedLength="false" Unicode="true" />
        </EntityType>
        <EntityType Name="Transaction">
          <Key>
            <PropertyRef Name="AccountNumber" />
            <PropertyRef Name="Amount" />
            <PropertyRef Name="CurrencyCode" />
            <PropertyRef Name="Type" />
            <PropertyRef Name="TransactionDate" />
          </Key>
          <Property Name="AccountNumber" Type="Int64" Nullable="false" />
          <Property Name="Amount" Type="Decimal" Nullable="false" Precision="18" Scale="3" />
          <Property Name="CurrencyCode" Type="String" Nullable="false" MaxLength="3" FixedLength="false" Unicode="false" />
          <Property Name="Type" Type="String" Nullable="false" MaxLength="1" FixedLength="true" Unicode="false" />
          <Property Name="TransactionDate" Type="DateTime" Nullable="false" Precision="3" />
        </EntityType>
        <ComplexType Name="InsertDeposit_Result">
          <Property Type="Int64" Name="AccountNumber" Nullable="false" />
          <Property Type="Decimal" Name="Balance" Nullable="false" Precision="18" Scale="3" />
          <Property Type="String" Name="CurrencyCode" Nullable="false" MaxLength="3" />
          <Property Type="DateTime" Name="ModifiedDate" Nullable="false" Precision="23" />
        </ComplexType>
        <ComplexType Name="InsertWithdraw_Result">
          <Property Type="Int64" Name="AccountNumber" Nullable="false" />
          <Property Type="Decimal" Name="Balance" Nullable="false" Precision="18" Scale="3" />
          <Property Type="String" Name="CurrencyCode" Nullable="false" MaxLength="3" />
          <Property Type="DateTime" Name="ModifiedDate" Nullable="false" Precision="23" />
        </ComplexType>
      </Schema>
    </edmx:ConceptualModels>
    <!-- C-S mapping content -->
    <edmx:Mappings>
      <Mapping Space="C-S" xmlns="http://schemas.microsoft.com/ado/2009/11/mapping/cs">
        <EntityContainerMapping StorageEntityContainer="AdventureWorks2012ModelStoreContainer" CdmEntityContainer="AdventureWorks2012Entities">
          <FunctionImportMapping FunctionImportName="GetAccountBalance" FunctionName="AdventureWorks2012Model.Store.GetAccountBalance">
            <ResultMapping>
              <ComplexTypeMapping TypeName="AdventureWorks2012Model.GetAccountBalance_Result">
                <ScalarProperty Name="AccountNumber" ColumnName="AccountNumber" />
                <ScalarProperty Name="Balance" ColumnName="Balance" />
                <ScalarProperty Name="CurrencyCode" ColumnName="CurrencyCode" />
                <ScalarProperty Name="ModifiedDate" ColumnName="ModifiedDate" />
              </ComplexTypeMapping>
            </ResultMapping>
          </FunctionImportMapping>
          <EntitySetMapping Name="AccountBalances">
            <EntityTypeMapping TypeName="AdventureWorks2012Model.AccountBalance">
              <MappingFragment StoreEntitySet="AccountBalance">
                <ScalarProperty Name="ModifiedDate" ColumnName="ModifiedDate" />
                <ScalarProperty Name="CurrencyCode" ColumnName="CurrencyCode" />
                <ScalarProperty Name="Balance" ColumnName="Balance" />
                <ScalarProperty Name="AccountNumber" ColumnName="AccountNumber" />
              </MappingFragment>
            </EntityTypeMapping>
          </EntitySetMapping>
          <EntitySetMapping Name="BankAccounts">
            <EntityTypeMapping TypeName="AdventureWorks2012Model.BankAccount">
              <MappingFragment StoreEntitySet="BankAccount">
                <ScalarProperty Name="AccountName" ColumnName="AccountName" />
                <ScalarProperty Name="AccountNumber" ColumnName="AccountNumber" />
              </MappingFragment>
            </EntityTypeMapping>
          </EntitySetMapping>
          <EntitySetMapping Name="Currencies">
            <EntityTypeMapping TypeName="AdventureWorks2012Model.Currency">
              <MappingFragment StoreEntitySet="Currency">
                <ScalarProperty Name="CurrencyName" ColumnName="CurrencyName" />
                <ScalarProperty Name="CurrencyCode" ColumnName="CurrencyCode" />
              </MappingFragment>
            </EntityTypeMapping>
          </EntitySetMapping>
          <EntitySetMapping Name="Transactions">
            <EntityTypeMapping TypeName="AdventureWorks2012Model.Transaction">
              <MappingFragment StoreEntitySet="Transaction">
                <ScalarProperty Name="TransactionDate" ColumnName="TransactionDate" />
                <ScalarProperty Name="Type" ColumnName="Type" />
                <ScalarProperty Name="CurrencyCode" ColumnName="CurrencyCode" />
                <ScalarProperty Name="Amount" ColumnName="Amount" />
                <ScalarProperty Name="AccountNumber" ColumnName="AccountNumber" />
              </MappingFragment>
            </EntityTypeMapping>
          </EntitySetMapping>
          <FunctionImportMapping FunctionImportName="InsertDeposit" FunctionName="AdventureWorks2012Model.Store.InsertDeposit">
            <ResultMapping>
              <ComplexTypeMapping TypeName="AdventureWorks2012Model.InsertDeposit_Result">
                <ScalarProperty Name="AccountNumber" ColumnName="AccountNumber" />
                <ScalarProperty Name="Balance" ColumnName="Balance" />
                <ScalarProperty Name="CurrencyCode" ColumnName="CurrencyCode" />
                <ScalarProperty Name="ModifiedDate" ColumnName="ModifiedDate" />
              </ComplexTypeMapping>
            </ResultMapping>
          </FunctionImportMapping>
          <FunctionImportMapping FunctionImportName="InsertWithdraw" FunctionName="AdventureWorks2012Model.Store.InsertWithdraw">
            <ResultMapping>
              <ComplexTypeMapping TypeName="AdventureWorks2012Model.InsertWithdraw_Result">
                <ScalarProperty Name="AccountNumber" ColumnName="AccountNumber" />
                <ScalarProperty Name="Balance" ColumnName="Balance" />
                <ScalarProperty Name="CurrencyCode" ColumnName="CurrencyCode" />
                <ScalarProperty Name="ModifiedDate" ColumnName="ModifiedDate" />
              </ComplexTypeMapping>
            </ResultMapping>
          </FunctionImportMapping>
          </EntityContainerMapping>
      </Mapping>
    </edmx:Mappings>
  </edmx:Runtime>
  <!-- EF Designer content (DO NOT EDIT MANUALLY BELOW HERE) -->
  <Designer xmlns="http://schemas.microsoft.com/ado/2009/11/edmx">
    <Connection>
      <DesignerInfoPropertySet>
        <DesignerProperty Name="MetadataArtifactProcessing" Value="EmbedInOutputAssembly" />
      </DesignerInfoPropertySet>
    </Connection>
    <Options>
      <DesignerInfoPropertySet>
        <DesignerProperty Name="ValidateOnBuild" Value="true" />
        <DesignerProperty Name="EnablePluralization" Value="true" />
        <DesignerProperty Name="IncludeForeignKeysInModel" Value="true" />
        <DesignerProperty Name="UseLegacyProvider" Value="false" />
        <DesignerProperty Name="CodeGenerationStrategy" Value="None" />
      </DesignerInfoPropertySet>
    </Options>
    <!-- Diagram content (shape and connector positions) -->
    <Diagrams></Diagrams>
  </Designer>
</edmx:Edmx>